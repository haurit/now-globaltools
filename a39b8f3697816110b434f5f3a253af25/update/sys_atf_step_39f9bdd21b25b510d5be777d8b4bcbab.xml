<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-30 06:30:27</sys_created_on>
        <sys_id>39f9bdd21b25b510d5be777d8b4bcbab</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="Global Tools" source="a39b8f3697816110b434f5f3a253af25">a39b8f3697816110b434f5f3a253af25</sys_package>
        <sys_policy/>
        <sys_scope display_value="Global Tools">a39b8f3697816110b434f5f3a253af25</sys_scope>
        <sys_update_name>sys_atf_step_39f9bdd21b25b510d5be777d8b4bcbab</sys_update_name>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2024-11-23 15:50:24</sys_updated_on>
        <table/>
        <test display_value="GlobalToolsObject Tests">4db64ce11b6db110d5be777d8b4bcb19</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=39f9bdd21b25b510d5be777d8b4bcbab"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>39f9bdd21b25b510d5be777d8b4bcbab</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-30 06:30:27</sys_created_on>
        <sys_id>711a75161b25b510d5be777d8b4bcb42</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2024-11-23 15:50:24</sys_updated_on>
        <value>(function (outputs, steps, params, stepResult, assertEqual) {&#13;
&#13;
	var bLog = false;&#13;
	var _gtObject = new global.GlobalToolsObject();&#13;
&#13;
	var _gtATF = new global.GlobalToolsATF('GlobalToolsObject', _gtObject, bLog, outputs, steps, params, stepResult, assertEqual);&#13;
	&#13;
	_gtATF.runATF('isObject', true, {});&#13;
	_gtATF.runATF('isObject', true, new Object());&#13;
	_gtATF.runATF('isObject', true, { 'a': 'b' });&#13;
	_gtATF.runATF('isObject', false, '');&#13;
	_gtATF.runATF('isObject', false, new String());&#13;
	_gtATF.runATF('isObject', false, 'a');&#13;
	_gtATF.runATF('isObject', false, 1);&#13;
	_gtATF.runATF('isObject', false, new Number());&#13;
	_gtATF.runATF('isObject', false, true);&#13;
	_gtATF.runATF('isObject', false, false);&#13;
	_gtATF.runATF('isObject', false, null);&#13;
	_gtATF.runATF('isObject', false, undefined);&#13;
	_gtATF.runATF('isObject', false, new Boolean());&#13;
	_gtATF.runATF('isObject', true, new Date());&#13;
	_gtATF.runATF('isObject', true, new GlideRecord('incident'));&#13;
&#13;
	_gtATF.runATF('getValue', 'testvalue', 'testpath/testnode', 'testreplace', { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('getValue', 'testreplace', 'testpath_invalid/testnode', 'testreplace', { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('getValue', 'testreplace', 'testpath/testnode_invalid', 'testreplace', { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('getValue', 'testreplace', 'testpath/testnode', 'testreplace', { 'testpath': { 'testnode': '' } });&#13;
	_gtATF.runATF('getValue', 'testreplace', 'testpath/testnode', 'testreplace');&#13;
	_gtATF.runATF('getValue', 'testreplace', 'testpath/testnode', 'testreplace', {});&#13;
	_gtATF.runATF('getValue', 'testreplace', undefined, 'testreplace');&#13;
&#13;
	var oObjSetValue = { 'testpath': { 'testnode': 'testvalue' } };&#13;
	_gtATF.runATF('setValue', undefined, 'testpath/testnode_1', 'testvalue1', oObjSetValue);&#13;
	if (_gtObject.getValue('testpath/testnode_1', 'testreplace1', oObjSetValue) != 'testvalue1') {&#13;
		_gtATF.addError('setValue', 'Value was not set correctly.');&#13;
	} // if value not set&#13;
&#13;
	_gtATF.runATF('hasValue', true, 'testpath/testnode', 'testreplace', { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('hasValue', false, 'testpath_invalid/testnode', 'testreplace', { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('hasValue', false, 'testpath/testnode_invalid', 'testreplace', { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('hasValue', true, 'testpath/testnode', 'testreplace', { 'testpath': { 'testnode': '' } });&#13;
	_gtATF.runATF('hasValue', false, 'testpath/testnode', 'testreplace');&#13;
	_gtATF.runATF('hasValue', false, 'testpath/testnode', 'testreplace', {});&#13;
	_gtATF.runATF('hasValue', false, undefined, 'testreplace');&#13;
&#13;
	_gtATF.runATF('deleteValue', null, 'testpath/testnode', oObjSetValue);&#13;
	_gtATF.runATF('hasValue', false, 'testpath/testnode', null, oObjSetValue);&#13;
	&#13;
	var oObjDeepMerge1 = { 'testpath': { 'testnode': 'testvalue', 'testnode_1': 'testvalue_1' } };&#13;
	var oObjDeepMerge2 = { 'testpath': { 'testnode': 'testvalue_override', 'testnode_2': 'testvalue_2' } };&#13;
	_gtATF.runATF('deepMerge', { 'testpath': { 'testnode': 'testvalue_override', 'testnode_1': 'testvalue_1', 'testnode_2': 'testvalue_2' } }, oObjDeepMerge1, oObjDeepMerge2);&#13;
&#13;
	oObjDeepMerge1 = { 'testpath': ['array_value_1', 'array_value_2'] };&#13;
	oObjDeepMerge2 = { 'testpath': ['array_value_1', 'array_value_3'] };&#13;
	_gtATF.runATF('deepMerge', { 'testpath': ['array_value_1', 'array_value_3'] }, oObjDeepMerge1, oObjDeepMerge2);&#13;
	oObjDeepMerge1 = { 'testpath': ['array_value_1', 'array_value_2'] };&#13;
	oObjDeepMerge2 = { 'testpath': ['array_value_1', 'array_value_3'] };&#13;
	_gtATF.runATF('deepMerge', { 'testpath': ['array_value_1', 'array_value_2', 'array_value_3'] }, oObjDeepMerge1, oObjDeepMerge2, true);&#13;
	oObjDeepMerge1 = { 'testpath': true };&#13;
	oObjDeepMerge2 = { 'testpath1': false };&#13;
	_gtATF.runATF('deepMerge', { 'testpath': true, 'testpath1': false }, oObjDeepMerge1, oObjDeepMerge2);&#13;
	&#13;
	_gtATF.runATF('getDepth', -1, 'teststring');&#13;
	_gtATF.runATF('getDepth', 0, {});&#13;
	_gtATF.runATF('getDepth', 1, { 'testpath': 'testvalue' });&#13;
	_gtATF.runATF('getDepth', 1, { 'testpath': {} });&#13;
	_gtATF.runATF('getDepth', 2, { 'testpath': { 'testnode': 'testvalue' } });&#13;
	_gtATF.runATF('getDepth', 3, { 'sugus0': 'sugus1', 'testpath': { 'testnode': 'testvalue' }, 'sugus2': {'sugus3': {'sugus4': 'sugus5', 'array1': [{'sugus7': 'sugus8'}]}}, 'sugus6': 6});&#13;
	_gtATF.runATF('getDepth', 4, { 'sugus0': 'sugus1', 'testpath': { 'testnode': 'testvalue' }, 'sugus2': {'sugus3': {'sugus4': 'sugus5', 'sugus6': {'sugus7': 'sugus8'}}}, 'sugus6': 6});&#13;
&#13;
	// Cannot test cyclic value because of earlier check: Cyclic {0} value not allowed.&#13;
	//var oObjRecursive = {'sugus0': 'sugus2'};&#13;
	//oObjRecursive['sugus1'] = oObjRecursive;&#13;
	//_gtATF.runATF('getDepth', -2, oObjRecursive);&#13;
&#13;
	_gtATF.runATF('parseJSON', undefined);&#13;
	_gtATF.runATF('parseJSON', undefined, 'teststring');&#13;
	_gtATF.runATF('parseJSON', undefined, 1);&#13;
	_gtATF.runATF('parseJSON', {}, '{}');&#13;
	_gtATF.runATF('parseJSON', {'test': 'sugus0'}, '{"test": "sugus0"}');&#13;
&#13;
	return _gtATF.endATF();&#13;
&#13;
})(outputs, steps, params, stepResult, assertEqual);&#13;
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>39f9bdd21b25b510d5be777d8b4bcbab</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-30 06:30:27</sys_created_on>
        <sys_id>bd1a75161b25b510d5be777d8b4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2023-09-30 06:30:27</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
</record_update>
