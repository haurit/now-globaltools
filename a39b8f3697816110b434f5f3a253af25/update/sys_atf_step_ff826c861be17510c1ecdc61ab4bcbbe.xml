<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <callable_outputs/>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-29 05:37:15</sys_created_on>
        <sys_id>ff826c861be17510c1ecdc61ab4bcbbe</sys_id>
        <sys_mod_count>125</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="Global Tools" source="a39b8f3697816110b434f5f3a253af25">a39b8f3697816110b434f5f3a253af25</sys_package>
        <sys_policy/>
        <sys_scope display_value="Global Tools">a39b8f3697816110b434f5f3a253af25</sys_scope>
        <sys_update_name>sys_atf_step_ff826c861be17510c1ecdc61ab4bcbbe</sys_update_name>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2025-02-18 07:35:36</sys_updated_on>
        <table/>
        <test display_value="GlobalToolsTable Tests">ccd68ce11b6db110d5be777d8b4bcbe6</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=ff826c861be17510c1ecdc61ab4bcbbe"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>ff826c861be17510c1ecdc61ab4bcbbe</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-29 05:37:15</sys_created_on>
        <sys_id>7454a8c61be17510c1ecdc61ab4bcb31</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2023-09-29 05:37:15</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>ff826c861be17510c1ecdc61ab4bcbbe</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>tom.hauri</sys_created_by>
        <sys_created_on>2023-09-29 05:37:15</sys_created_on>
        <sys_id>7c54a8c61be17510c1ecdc61ab4bcb31</sys_id>
        <sys_mod_count>125</sys_mod_count>
        <sys_updated_by>tom.hauri</sys_updated_by>
        <sys_updated_on>2025-02-18 07:35:36</sys_updated_on>
        <value>(function (outputs, steps, params, stepResult, assertEqual) {&#13;
&#13;
	var bLog = false;&#13;
	var _gtTable = new global.GlobalToolsTable();&#13;
&#13;
	var _gtATF = new global.GlobalToolsATF('GlobalToolsTable', _gtTable, bLog, outputs, steps, params, stepResult, assertEqual);&#13;
	var grRecord;&#13;
&#13;
	var sTableIdInc = _gtTable.getTableId('incident');&#13;
	var sTableIdProb = _gtTable.getTableId('problem');&#13;
&#13;
	_gtATF.runATF('getTableId', undefined);&#13;
	_gtATF.runATF('getTableId', undefined, 'invalidtable');&#13;
	_gtATF.runATF('getTableId', undefined, []);&#13;
	_gtATF.runATF('getTableId', undefined, ['invalidtable']);&#13;
	_gtATF.runATF('getTableId', sTableIdInc, 'incident');&#13;
	_gtATF.runATF('getTableId', sTableIdProb, 'problem');&#13;
	_gtATF.runATF('getTableId', [sTableIdInc, sTableIdProb], ['incident', 'problem']);&#13;
&#13;
	_gtATF.runATF('getTableName', undefined);&#13;
	_gtATF.runATF('getTableName', undefined, 'invalidtable');&#13;
	_gtATF.runATF('getTableName', undefined, []);&#13;
	_gtATF.runATF('getTableName', undefined, ['invalidtable']);&#13;
	_gtATF.runATF('getTableName', 'incident', sTableIdInc);&#13;
	_gtATF.runATF('getTableName', 'problem', sTableIdProb);&#13;
	_gtATF.runATF('getTableName', ['incident', 'problem'], [sTableIdInc, sTableIdProb]);&#13;
	&#13;
	_gtATF.runATF('isValidTable', undefined);&#13;
	_gtATF.runATF('isValidTable', undefined, 'invalidtable');&#13;
	_gtATF.runATF('isValidTable', true, 'task');&#13;
&#13;
	_gtATF.runATF('isValidDBView', undefined);&#13;
	_gtATF.runATF('isValidDBView', undefined, 'invalidtable');&#13;
	_gtATF.runATF('isValidDBView', undefined, 'task');&#13;
	_gtATF.runATF('isValidDBView', true, 'incident_sla');&#13;
&#13;
	grRecord = _gtATF.getRecord('task', 'sys_class_name=task');&#13;
	if (grRecord) {&#13;
		_gtATF.runATF('getRecordClass', 'task', grRecord);&#13;
	} // if record&#13;
	grRecord = _gtATF.getRecord('task', 'sys_class_name=incident');&#13;
	if (grRecord) {&#13;
		_gtATF.runATF('getRecordClass', 'incident', grRecord);&#13;
	} // if record&#13;
	grRecord = _gtATF.getRecord('cmdb_ci', 'sys_class_name=cmdb_ci_server');&#13;
	if (grRecord) {&#13;
		_gtATF.runATF('getRecordClass', 'cmdb_ci_server', grRecord);&#13;
	} // if record&#13;
	_gtATF.runATF('getRecordClass', undefined, 'invalidrecord');&#13;
&#13;
	_gtATF.runATF('getAbsoluteBase', 'task', 'task');&#13;
	_gtATF.runATF('getAbsoluteBase', 'task', 'incident');&#13;
	_gtATF.runATF('getAbsoluteBase', 'cmdb_ci', 'cmdb_ci');&#13;
	_gtATF.runATF('getAbsoluteBase', 'cmdb_ci', 'cmdb_ci_server');&#13;
	_gtATF.runATF('getAbsoluteBase', undefined, 'invalidtable');&#13;
&#13;
	_gtATF.runATF('getTableHierarchy', ['task'], 'task');&#13;
	_gtATF.runATF('getTableHierarchy', ['incident', 'task'], 'incident');&#13;
	_gtATF.runATF('getTableHierarchy', ['cmdb_ci', 'cmdb'], 'cmdb_ci');&#13;
	_gtATF.runATF('getTableHierarchy', ['cmdb_ci_server', 'cmdb_ci_computer', 'cmdb_ci_hardware', 'cmdb_ci', 'cmdb'], 'cmdb_ci_server');&#13;
	_gtATF.runATF('getTableHierarchy', undefined, 'invalidtable');&#13;
&#13;
	_gtATF.runATF('getTableExtensions', '&gt;10', 'task');&#13;
	_gtATF.runATF('getTableExtensions', 0, 'incident');&#13;
	_gtATF.runATF('getTableExtensions', '&gt;10', 'cmdb_ci_server');&#13;
	_gtATF.runATF('getTableExtensions', undefined, 'invalidtable');&#13;
	_gtATF.runATF('getTableExtensions', ['incident'], 'incident', true);&#13;
	_gtATF.runATF('getTableExtensions', undefined, 'invalidtable', true);&#13;
&#13;
	_gtATF.runATF('isTableUpdateSynched', undefined);&#13;
	_gtATF.runATF('isTableUpdateSynched', undefined, 'invalidtable');&#13;
	_gtATF.runATF('isTableUpdateSynched', undefined, 'task');&#13;
	_gtATF.runATF('isTableUpdateSynched', undefined, 'incident_sla');&#13;
	_gtATF.runATF('isTableUpdateSynched', true, 'sys_script');&#13;
&#13;
	_gtATF.runATF('getTableScopeInfo', { 'id': 'global', 'access': null, 'read': true, 'create': true, 'write': true, 'delete': false }, 'incident');&#13;
	_gtATF.runATF('getTableScopeInfo', undefined, 'invalidtable');&#13;
&#13;
	grRecord = _gtATF.getRecord('incident', 'active=true');&#13;
	_gtATF.runATF('getInternalType', 'integer', grRecord, 'incident_state');&#13;
	_gtATF.runATF('getInternalType', 'boolean', grRecord, 'active');&#13;
	_gtATF.runATF('getInternalType', 'string', grRecord, 'short_description');&#13;
	_gtATF.runATF('getInternalType', 'reference', grRecord, 'caller_id');&#13;
&#13;
	_gtATF.runATF('getDisplayField', 'number', 'task');&#13;
	_gtATF.runATF('getDisplayField', 'number', 'incident');&#13;
	_gtATF.runATF('getDisplayField', 'short_description', 'vtb_task');&#13;
	_gtATF.runATF('getDisplayField', undefined, 'cmdb_ci_server');&#13;
	_gtATF.runATF('getDisplayField', undefined, 'invalidtable');&#13;
&#13;
	grRecord = _gtATF.getRecord('incident', 'active=true');&#13;
	_gtATF.runATF('getFieldLabel', undefined);&#13;
	_gtATF.runATF('getFieldLabel', undefined, 'incident');&#13;
	_gtATF.runATF('getFieldLabel', 'Caller', 'incident', 'caller_id');&#13;
	_gtATF.runATF('getFieldLabel', undefined, grRecord);&#13;
	_gtATF.runATF('getFieldLabel', 'Caller', grRecord, 'caller_id');&#13;
&#13;
	_gtATF.runATF('getFields', '&gt;10', 'task');&#13;
	_gtATF.runATF('getFields', '&gt;10', 'incident');&#13;
	_gtATF.runATF('getFields', '&gt;10', 'cmdb_ci_server'); //&#13;
	_gtATF.runATF('getFields', ['context_map', 'level', 'message', 'source', 'sequence', 'source_application_family', 'source_package', 'sys_class_name', 'sys_created_by', 'sys_created_on', 'sys_id'], 'syslog');&#13;
	_gtATF.runATF('getFields', 0, 'invalidtable');&#13;
	grRecord = _gtATF.getRecord('syslog', 'sys_class_name=syslog');&#13;
	if (grRecord) {&#13;
		_gtATF.runATF('getFields', '&gt;5', grRecord);&#13;
	} // if record&#13;
&#13;
	_gtATF.runATF('getFieldParentTable', undefined);&#13;
	_gtATF.runATF('getFieldParentTable', undefined, 'invalidtable');&#13;
	_gtATF.runATF('getFieldParentTable', undefined, 'cmdb_ci_service_discovered');&#13;
	_gtATF.runATF('getFieldParentTable', undefined, 'cmdb_ci_service_discovered', 'caller_id');&#13;
	_gtATF.runATF('getFieldParentTable', undefined, grRecord);&#13;
	_gtATF.runATF('getFieldParentTable', 'cmdb_ci_service', 'cmdb_ci_service_discovered', 'service_owner_delegate');&#13;
	grRecord = _gtATF.getRecord('cmdb_ci_service', '');&#13;
	if (grRecord) {&#13;
		_gtATF.runATF('getFieldParentTable', 'cmdb_ci', grRecord, 'operational_status');&#13;
		_gtATF.runATF('getFieldParentTable', 'cmdb_ci_service', grRecord, 'busines_criticality');&#13;
	} // if record&#13;
&#13;
	_gtATF.runATF('getRefTable', undefined, 'invalidtable');&#13;
	_gtATF.runATF('getRefTable', undefined, 'incident');&#13;
	_gtATF.runATF('getRefTable', undefined, 'incident', 'invalidfield');&#13;
	_gtATF.runATF('getRefTable', undefined, 'incident', 'number');&#13;
	_gtATF.runATF('getRefTable', 'sys_user', 'incident', 'caller_id');&#13;
&#13;
	grRecord = _gtATF.getRecord('incident', 'active=true');&#13;
	_gtATF.runATF('getRefFieldName', undefined);&#13;
	_gtATF.runATF('getRefFieldName', undefined, 'incident');&#13;
	_gtATF.runATF('getRefFieldName', undefined, grRecord);&#13;
	_gtATF.runATF('getRefFieldName', undefined, grRecord, 'invalidreftable');&#13;
	_gtATF.runATF('getRefFieldName', 'assigned_to', grRecord, 'sys_user');&#13;
	_gtATF.runATF('getRefFieldName', 'assigned_to', grRecord, 'sys_user', true);&#13;
	if (grRecord.isValidField('task_for')) {&#13;
		_gtATF.runATF('getRefFieldName', ['resolved_by', 'caller_id', 'reopened_by', 'opened_by', 'closed_by', 'assigned_to', 'task_for'], grRecord, 'sys_user', true, 'array');&#13;
	} else {&#13;
		_gtATF.runATF('getRefFieldName', ['resolved_by', 'caller_id', 'reopened_by', 'opened_by', 'closed_by', 'assigned_to'], grRecord, 'sys_user', true, 'array');&#13;
	} // if task_for field&#13;
&#13;
	_gtATF.runATF('getDictOrOverrideValue', undefined);&#13;
	_gtATF.runATF('getDictOrOverrideValue', undefined, 'invalidtable');&#13;
	_gtATF.runATF('getDictOrOverrideValue', undefined, 'incident', 'invalidfield');&#13;
	_gtATF.runATF('getDictOrOverrideValue', undefined, 'incident', 'assigned_to');&#13;
	_gtATF.runATF('getDictOrOverrideValue', undefined, 'incident', 'assigned_to', 'invalidattribute');&#13;
	_gtATF.runATF('getDictOrOverrideValue', 'assignment_group', 'incident', 'assigned_to', 'dependent');&#13;
	_gtATF.runATF('getDictOrOverrideValue', 'default_work_state=-5,close_states=3;4;7,default_close_state=3', 'change_request', 'state', 'attributes');&#13;
	_gtATF.runATF('getDictOrOverrideValue', '-5', 'change_request', 'state', 'default_value');&#13;
	_gtATF.runATF('getDictOrOverrideValue', undefined, 'cmdb_ci_business_process', 'owned_by', 'dependent');&#13;
	_gtATF.runATF('getDictOrOverrideValue', '0', 'cmdb_ci_business_process', 'owned_by', 'mandatory');&#13;
	_gtATF.runATF('getDictOrOverrideValue', '0', 'cmdb_ci_business_process', 'life_cycle_stage', 'read_only');&#13;
	_gtATF.runATF('getDictOrOverrideValue', 'javascript: new LifeCycleUtil().filterLifeCycleStage()', 'cmdb_ci_business_process', 'life_cycle_stage', 'reference_qual');&#13;
	_gtATF.runATF('getDictOrOverrideValue', null, 'vtb_task', 'short_description', 'display_override');&#13;
	_gtATF.runATF('getDictOrOverrideValue', 'origin_table', 'incident', 'origin_id', 'dependent');&#13;
&#13;
	_gtATF.runATF('getFieldChoices', [[], [], []]);&#13;
	_gtATF.runATF('getFieldChoices', [[], [], []], 'invalidtable');&#13;
	_gtATF.runATF('getFieldChoices', [[], [], []], 'incident', 'invalidfield');&#13;
	_gtATF.runATF('getFieldChoices', [['inquiry', 'software', 'hardware', 'network', 'database', 'password_reset'], [, , , , , ,], ['inquiry (Inquiry / Help)', 'software (Software)', 'hardware (Hardware)', 'network (Network)', 'database (Database)', 'password_reset (Password Reset)']], 'incident', 'category'); // added pw reset in Xanadu&#13;
	_gtATF.runATF('getFieldChoices', '&gt;2', 'incident', 'subcategory');&#13;
&#13;
	_gtATF.runATF('getFieldChoices', [['antivirus', 'email', 'internal application'], ['inquiry', 'inquiry', 'inquiry'], ['antivirus (Antivirus)', 'email (Email)', 'internal application (Internal Application)']], 'incident', 'subcategory', 'inquiry');&#13;
&#13;
	_gtATF.runATF('getMandatoryFields', ['name', 'type'], 'sys_sg_parameter_screen'); // icon should not be shown, dict override to remove it&#13;
	_gtATF.runATF('getMandatoryFields', ['short_description'], 'problem');&#13;
	_gtATF.runATF('getMandatoryFields', undefined, 'invalidtable');&#13;
&#13;
	_gtATF.runATF('generateLucidChartERDInput', '');&#13;
	_gtATF.runATF('generateLucidChartERDInput', '', 'invalidconfig');&#13;
	_gtATF.runATF('generateLucidChartERDInput', '', {});&#13;
	_gtATF.runATF('generateLucidChartERDInput', '', {a: 'b'});&#13;
	_gtATF.runATF('generateLucidChartERDInput', [], {sTables: 'invalidtable'});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /incident \| cmdb/g, {sTables: 'incident,sys_user'});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /incident \| caller_id/g, {sTables: 'incident,sys_user', bOnlyTableWithoutHierarchy: true});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /mysql/g, {aTables: ['incident', 'sys_user', 'sys_user']});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /incident \| number/g, {aTables: ['incident'], bOnlyReferenceFields: false});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /incident \| company/g, {aTables: ['incident'], bOnlyReferenceFields: true});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /incident_task \| sys_id/g, {aPackages: ['com.snc.incident']});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /sn_admin_center_solution \| objective/g, {aApps: ['sn_admin']});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /com.snc.incident \| incident/g, {aPackages: ['com.snc.incident', 'apps/system_user'], sSchemaType: 'package'});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /cmn_cost_center \| location/g, {sTables: 'incident', bFollowReferences: true});&#13;
	_gtATF.runATF('generateLucidChartERDInput', /task_location \| task/g, {sTables: 'incident', bFollowInboundReferences: true});&#13;
&#13;
	return _gtATF.endATF();&#13;
&#13;
})(outputs, steps, params, stepResult, assertEqual);&#13;
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
